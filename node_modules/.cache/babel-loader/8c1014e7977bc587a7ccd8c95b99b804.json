{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AdalConfig from './config/AdalConfig';\nimport AuthContext from './services/Auth'; // Handle possible callbacks on id_token or access_token\n\nAuthContext.handleWindowCallback(); // Extra callback logic, only in the actual application, not in iframes in the app\n\nif (window === window.parent && window === window.top && !AuthContext.isCallback(window.location.hash)) {\n  // Having both of these checks is to prevent having a token in localstorage, but no user.\n  if (!AuthContext.getCachedToken(AdalConfig.clientId) || !AuthContext.getCachedUser()) {\n    AuthContext.login(); // or render something that everyone can see\n    // ReactDOM.render(<PublicPartOfApp />, document.getElementById('root'))\n  } else {\n    AuthContext.acquireToken(AdalConfig.endpoints.api, function (message, token, msg) {\n      if (token) {\n        ReactDOM.render(React.createElement(App, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), document.getElementById('root'));\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:\\Work\\ReactAdalAuthenticationSession\\src\\index.js"],"names":["React","ReactDOM","App","AdalConfig","AuthContext","handleWindowCallback","window","parent","top","isCallback","location","hash","getCachedToken","clientId","getCachedUser","login","acquireToken","endpoints","api","message","token","msg","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAEA;;AACAA,WAAW,CAACC,oBAAZ,G,CAEA;;AACA,IAAKC,MAAM,KAAKA,MAAM,CAACC,MAAnB,IAA8BD,MAAM,KAAKA,MAAM,CAACE,GAAhD,IAAuD,CAACJ,WAAW,CAACK,UAAZ,CAAuBH,MAAM,CAACI,QAAP,CAAgBC,IAAvC,CAA5D,EAA0G;AACxG;AACA,MAAI,CAACP,WAAW,CAACQ,cAAZ,CAA2BT,UAAU,CAACU,QAAtC,CAAD,IAAoD,CAACT,WAAW,CAACU,aAAZ,EAAzD,EAAsF;AACpFV,IAAAA,WAAW,CAACW,KAAZ,GADoF,CAEpF;AACA;AACD,GAJD,MAIO;AACLX,IAAAA,WAAW,CAACY,YAAZ,CAAyBb,UAAU,CAACc,SAAX,CAAqBC,GAA9C,EAAmD,UAACC,OAAD,EAAUC,KAAV,EAAiBC,GAAjB,EAAyB;AAC1E,UAAID,KAAJ,EAAW;AACTnB,QAAAA,QAAQ,CAACqB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACD;AACF,KAJD;AAKD;AACF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport AdalConfig from './config/AdalConfig'\r\nimport AuthContext from './services/Auth'\r\n\r\n// Handle possible callbacks on id_token or access_token\r\nAuthContext.handleWindowCallback()\r\n\r\n// Extra callback logic, only in the actual application, not in iframes in the app\r\nif ((window === window.parent) && window === window.top && !AuthContext.isCallback(window.location.hash)) {\r\n  // Having both of these checks is to prevent having a token in localstorage, but no user.\r\n  if (!AuthContext.getCachedToken(AdalConfig.clientId) || !AuthContext.getCachedUser()) {\r\n    AuthContext.login()\r\n    // or render something that everyone can see\r\n    // ReactDOM.render(<PublicPartOfApp />, document.getElementById('root'))\r\n  } else {\r\n    AuthContext.acquireToken(AdalConfig.endpoints.api, (message, token, msg) => {\r\n      if (token) {\r\n        ReactDOM.render(<App />, document.getElementById('root'))\r\n      }\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}