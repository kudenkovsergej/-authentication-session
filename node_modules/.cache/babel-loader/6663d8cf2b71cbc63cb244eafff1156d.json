{"ast":null,"code":"import _classCallCheck from \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Work\\\\ReactAdalAuthenticationSession\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport AuthContext from './services/Auth';\nimport Api from './services/Api';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Perform a network request on mount to easily test our setup\n      Api.get('/todos');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"React Adal Authentication Session Sample\")), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"You should only be able to view this when you are logged in.\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Open the browser's developer tools and go to the network tab. Then click this button and see that the access token is in the Authorization header of the network request, and if the backend accepts it.\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return Api.get('/todos');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Test GET data\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Press this button to logout.\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return AuthContext.logOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Logout\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Work\\ReactAdalAuthenticationSession\\src\\App.js"],"names":["React","Component","AuthContext","Api","App","get","logo","logOut"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;IAEMC,G;;;;;;;;;;;;;wCACgB;AAClB;AACAD,MAAAA,GAAG,CAACE,GAAJ,CAAQ,QAAR;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAGC,IAAX;AAAkB,QAAA,SAAS,EAAC,UAA5B;AAAuC,QAAA,GAAG,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,CADF,EAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oNADF,EAKE;AAAQ,QAAA,OAAO,EAAG;AAAA,iBAAMH,GAAG,CAACE,GAAJ,CAAQ,QAAR,CAAN;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CARF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAQ,QAAA,OAAO,EAAG;AAAA,iBAAMH,WAAW,CAACK,MAAZ,EAAN;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAfF,CADF;AAsBD;;;;EA7BeN,S;;AAgClB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport AuthContext from './services/Auth'\r\nimport Api from './services/Api'\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // Perform a network request on mount to easily test our setup\r\n    Api.get('/todos')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">React Adal Authentication Session Sample</h1>\r\n        </header>\r\n        <p className=\"App-intro\">\r\n          You should only be able to view this when you are logged in.\r\n        </p>\r\n        <div>\r\n          <p>\r\n            Open the browser's developer tools and go to the network tab. Then click this button and see that the access token is in the Authorization header of the network request,\r\n            and if the backend accepts it.\r\n          </p>\r\n          <button onClick={ () => Api.get('/todos') }>Test GET data</button>\r\n        </div>\r\n        <div>\r\n          <p>Press this button to logout.</p>\r\n          <button onClick={ () => AuthContext.logOut() }>Logout</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}